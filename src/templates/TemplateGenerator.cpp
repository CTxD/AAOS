//
// Created by teamt on 04/10/2019.
//
"""
#include "TemplateGenerator.h"
#include "../types/arinc_module.h"
#include "../types/channel.h"
#include "../types/error_id_action.h"
#include "../types/error_id_level.h"
#include "../types/error_id_type.h"
#include "../types/memory_requiremenets.h"
#include "../types/module_hm_table.h"
#include "../types/partition.h"
#include "../types/partition_hm_table.h"
#include "../types/partition_memory.h"
#include "../types/port_mapping.h"
#include "../types/port_type.h"
#include "../types/process.h"
#include "../types/queuing_port.h"
#include "../types/sampling_port.h"
#include "../types/schedule.h"
#include "../types/system_hm_table.h"
#include "../types/system_state_entry.h"

"""

//number generated by code generator
	Partition partitions[10]{
	{ /*partition*/
		0, //identifier valuetype
		"nametype", //partitionName
		LEVEL_A,	//Critticallity
		false, //system partition
		"entryPoint", //entryPoint
		{{/*SamplingPort array??*/
			{/*PortType*/
				"nameType",
				1,
				{/*PortMappingType*/
					{/*PseudoPartition*/
						"nameType",
						"physicalAdress",
						"nameType(procedure)"
					},
					{/*StandardPartition*/
						1,
						"nameType",
						"nameType",
						2
					}
				}
			},
			0.0f
		}},
		{{/*QueuingPort array??*/
			{/*PortType*/
				"nameType",
				1,
				{/*PortMappingType*/
					{/*PseudoPartition*/
						"nameType",
						"physicalAdress",
						"nameType(procedure)"
					},
					{/*StandardPartition*/
						1,
						"nameType",
						"nameType",
						2
					},
				}
			},
			0
		}},
		{{/*Process array??*/
			"nameType", //name
			"stacksSize", //<decOrHexValueType> stacksSize
			LEVEL_A, //Criticality
			false, //systemPartition
			"nameType" //entryPoint
		}}
	}
};


ModuleSchedule moduleSchedule = {
	{					/*PartitionSchedule*/
		0,					//identifierValueType partitionIdentifier
		"nameType",			//partitionName
		0.0f,				//periodSeconds
		0.0f,				//periodDurationSeconds
		{{				/*WindowSchedule*/
				0,			//identifierValueType windowIdentifier
				0.0f		//windowStartSeconds
				0.0f		//windowDurationSeconds
				true		//partitionPeriodStart
		}}
	}
}

ArincModule arincModule = {
	"nametype",							//std::optional<nameType> moduleName;                  
	"nametype",							//std::optional<nameType> moduleVersion;               
	0,									//std::optional<identifierValueType> moduleID;         
	{								//Channel connectionTable[CHANNEL_NUMBER];
		0,								//identifierValueType channelIdentifier;			
		"nametype",						//std::optional<nameType> channelName;			
		{							//PortMappingType source;
			{						/*PseudoPartition*/
				"nameType",				//nametype
				"physicalAdress",		//physical address
				"nameType(procedure)"	//procedure
			},
			{						/*StandardPartition*/
				1,						//identifierValueType partitionIdentifier;
				"nameType",				//std::optional<nameType> partitionName;
				"nameType",				//nameType portName;
				2						//std::optional<int> physicalAdress;
			}
		},
		{							//PortMappingType destination[PARTITION_NUMBER];
			{						/*PseudoPartition*/
				"nameType",				//nametype
				"physicalAdress",		//physical address
				"nameType(procedure)"	//procedure
			},
			{						/*StandardPartition*/
				1,						//identifierValueType partitionIdentifier;
				"nameType",				//std::optional<nameType> partitionName;
				"nameType",				//nameType portName;
				2						//std::optional<int> physicalAdress;
			}
		},
	}					           
						//SystemHMTable systemHMTable;                         
						//ModuleHMTable moduleHMTable;                         
						//PartitionHMTable partitionHMTable[PARTITION_NUMBER]; 
}


















